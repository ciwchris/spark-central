Prep
----

- Use screencast cursor
- Chrome incognito at CodePen home page
- Chrome logged in at CodePen on new pen
- Chrome with reference site pulled up
- Graph paper?

Agenda overview
---------------

- Find a computer
- We'll walk through what we will be using
- Make sure everyone can see the same thing on their computer
- Basic understanding of how we'll draw
- I'll show a shape, then you'll spend time to try it out, if you have questions get Erica's my attention (Repeat)
- See how far we'll get, we won't go through the whole reference
- Last 45 minutes you'll create something from what you've learned
- Perhaps share what we created
- Experiment! Try different things and see what happens. You don't need to understand everything before trying something. Just start trying.

Agenda
------

- Introduce to codepen (in Chrome as private)
    - Anonymous (can create a new tab for each pen you create)
        - Maximize HTML
        - Drag divider
        - Change view
        - Will auto save (type something)
    - Switch to Chrome with (for light theme)
- Show reference
    - Again, not going to cover the whole thing
    - Go over drawing area
        - Elements. Written using angle brackets.
            - Have a start and an end
            - Content goes between them
            - If there isn't content they can close immediately (explain when drawing a line)
- Lines
    - To get you going
    - Can copy pieces out (Show this)
        - Can modify there but better to become familiar with CodePen.
    - Element with properties. Self closing.
    - Drawing off the area (changing the height of the drawing area)
    - Try label: things to experiment, but not limited to this
    - Click on stroke line cap to show instructions (can be intimidating but look at examples)
- Rectangles
- Circles & ellipses
- Text
    - font-face: arial, sans-serif, mono
- Transform
    - Discuss scaling
    - Explain rotation point, show halfway down
- Animation
    - Call out: rectangle is not self closing, has content
    - Challenges
        - Grow the rectangle from both sides
        - Do we need to use this scale for this example? Why not animate the radius?
    - Have try with text
- Polygon
    - Straight lines
    - Have try triangle
- Gradient
    - Id can be whatever you want, be needs to be unique
    - Offsets, start and end the transition
    - Defs section
    - Changing from to diagonal
- Filter
    - Gaussian is the type of blur
- Groups & Use
    - Second example uses translate to make the second location easier to specify
- Viewbox


Rap up
------

- Congratulations you've now done some web development
- Show snowman (point out the parts we learned)
- Show Method Draw
    - Optionally make a cloud
    - Show the source code view


Can be confusing, lots of ways to do accomplish the same thing
SVG: it's scable, can make the image bigger or smaller without imaging becoming blurry





Learn more by looking at https://developer.mozilla.org/en-US/docs/Web/SVG
Can look intimidating. But experiment to figure it out. Search for example usages.
Go through the tutorial https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial

If your serious about creating images you will use tools instead of creating everything by hand. But this gives you a foundation of important concepts.
Image site that anthony sent

References:

https://www.sarasoueidan.com/blog/svg-transformations/
http://svgpocketguide.com/book/

https://en.wikipedia.org/wiki/Web_colors
https://upload.wikimedia.org/wikipedia/commons/2/2b/SVG_Recognized_color_keyword_names.svg


<svg width="400" height="250">
  <defs>
    <radialGradient id="AnimatedGradientFlower">
      <stop offset="45%" stop-color="yellow"/>
      <stop offset="75%" stop-color="yellow" stop-opacity=".8"/>
      <stop offset="99%" stop-color="greenyellow"/>
    </radialGradient>
  </defs>
  <ellipse cx="200" cy="100" rx="20" ry="20" fill="greenyellow" >
    <animate attributeName="rx"
             from="20" to="60"
             dur="5s"
             repeatCount="indefinite" />
  </ellipse>
  <ellipse cx="200" cy="100" rx="20" ry="20" fill="greenyellow" >
    <animate attributeName="ry"
             from="20" to="60"
             dur="5s"
             repeatCount="indefinite" />
  </ellipse>
  <ellipse cx="200" cy="100" rx="20" ry="20" fill="greenyellow" transform="rotate(45 200 100)" >
    <animate attributeName="ry"
             from="20" to="60"
             dur="5s"
             repeatCount="indefinite" />
  </ellipse>
  <ellipse cx="200" cy="100" rx="20" ry="20" fill="greenyellow" transform="rotate(-45 200 100)" >
    <animate attributeName="ry"
             from="20" to="60"
             dur="5s"
             repeatCount="indefinite" />
  </ellipse>
  <circle cx="0" cy="0" r="20" fill="url(#AnimatedGradientFlower)" transform="translate(200 100)" >
    <animate attributeName="r"
             from="10" to="25"
             dur="5s"
             repeatCount="indefinite" />
  </circle>
</svg>
